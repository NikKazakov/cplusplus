#include <cairo.h>
#include <gtk/gtk.h>
#include <math.h>

struct color{
    double r;
    double g;
    double b;
};

color line = {0,0,0};
color fill = {255,255,255};
GtkWidget *window;
GtkWidget *darea;
  
static void do_drawing(cairo_t *, GtkWidget *);


static gboolean on_draw_event(GtkWidget *widget, cairo_t *cr, gpointer user_data){  
  do_drawing(cr, widget);  

  return FALSE;
}

static void do_drawing(cairo_t *cr, GtkWidget *widget){
  GtkWidget *win = gtk_widget_get_toplevel(widget);
  
  int width, height;
  gtk_window_get_size(GTK_WINDOW(win), &width, &height);
  height = height - 40;
  
  cairo_set_line_width(cr, 10);
  cairo_set_source_rgb(cr, line.r, line.g, line.b);
  int r_width = width*0.4;
  int r_height = height*0.4;
  
  cairo_translate(cr, width/2, height/2);
  
  cairo_rectangle(cr, -r_width/2,-r_height/2, r_width, r_height);
  cairo_stroke_preserve(cr);

  cairo_set_source_rgb(cr, fill.r, fill.g, fill.b); 
  cairo_fill(cr);      
}

void on_destroy(){
    printf("I handle exit!\n");
    gtk_main_quit();
}

void set_brush_red(){
    fill = {1, 0, 0};
    cairo_t *cr = gdk_cairo_create(gtk_widget_get_window(darea));
    do_drawing(cr, darea);
}
void set_brush_green(){
    fill = {0, 1, 0};
    cairo_t *cr = gdk_cairo_create(gtk_widget_get_window(darea));
    do_drawing(cr, darea);
}
void set_brush_blue(){
    fill = {0, 0, 1};
    cairo_t *cr = gdk_cairo_create(gtk_widget_get_window(darea));
    do_drawing(cr, darea);
}

void set_pen_red(){
    line = {1, 0, 0};
    cairo_t *cr = gdk_cairo_create(gtk_widget_get_window(darea));
    do_drawing(cr, darea);
}
void set_pen_green(){
    line = {0, 1, 0};
    cairo_t *cr = gdk_cairo_create(gtk_widget_get_window(darea));
    do_drawing(cr, darea);
}
void set_pen_blue(){
    line = {0, 0, 1};
    cairo_t *cr = gdk_cairo_create(gtk_widget_get_window(darea));
    do_drawing(cr, darea);
}

int main (int argc, char *argv[])
{

  
  gtk_init(&argc, &argv);

  window = gtk_window_new(GTK_WINDOW_TOPLEVEL);

  darea = gtk_drawing_area_new();
  
  //gtk_container_add(GTK_CONTAINER(window), darea);

  g_signal_connect(G_OBJECT(darea), "draw", 
      G_CALLBACK(on_draw_event), NULL);
  g_signal_connect(G_OBJECT(window), "destroy",
     G_CALLBACK(on_destroy), NULL);

  color temp;
  temp = line;
  line = fill;
  fill = temp;
  
  GtkWidget *vbox = gtk_vbox_new(FALSE, 0); 
  gtk_container_add(GTK_CONTAINER(window), vbox);
  GtkWidget *menubar = gtk_menu_bar_new();
  
  GtkWidget *menu_file = gtk_menu_new();
  GtkWidget *mi_file = gtk_menu_item_new_with_label("File");
  GtkWidget *mi_exit = gtk_menu_item_new_with_label("Exit");
  g_signal_connect(mi_exit, "activate", G_CALLBACK(on_destroy), NULL);
  gtk_menu_item_set_submenu(GTK_MENU_ITEM(mi_file), menu_file);
  gtk_menu_shell_append(GTK_MENU_SHELL(menu_file), mi_exit);
  
  GtkWidget *menu_brush = gtk_menu_new();
  GtkWidget *mi_brush = gtk_menu_item_new_with_label("Brush");
  gtk_menu_item_set_submenu(GTK_MENU_ITEM(mi_brush), menu_brush);
  GtkWidget *mi_br_red = gtk_menu_item_new_with_label("Red");
  gtk_menu_shell_append(GTK_MENU_SHELL(menu_brush), mi_br_red);
  g_signal_connect(mi_br_red, "activate", G_CALLBACK(set_brush_red), NULL);
  GtkWidget *mi_br_green = gtk_menu_item_new_with_label("Green");
  gtk_menu_shell_append(GTK_MENU_SHELL(menu_brush), mi_br_green);
  g_signal_connect(mi_br_green, "activate", G_CALLBACK(set_brush_green), NULL);
  GtkWidget *mi_br_blue = gtk_menu_item_new_with_label("Blue");
  gtk_menu_shell_append(GTK_MENU_SHELL(menu_brush), mi_br_blue);
  g_signal_connect(mi_br_blue, "activate", G_CALLBACK(set_brush_blue), NULL);
  
  GtkWidget *menu_pen = gtk_menu_new();
  GtkWidget *mi_pen = gtk_menu_item_new_with_label("Pen");
  gtk_menu_item_set_submenu(GTK_MENU_ITEM(mi_pen), menu_pen);
  GtkWidget *mi_pen_red = gtk_menu_item_new_with_label("Red");
  gtk_menu_shell_append(GTK_MENU_SHELL(menu_pen), mi_pen_red);
  g_signal_connect(mi_pen_red, "activate", G_CALLBACK(set_pen_red), NULL);
  GtkWidget *mi_pen_green = gtk_menu_item_new_with_label("Green");
  gtk_menu_shell_append(GTK_MENU_SHELL(menu_pen), mi_pen_green);
  g_signal_connect(mi_pen_green, "activate", G_CALLBACK(set_pen_green), NULL);
  GtkWidget *mi_pen_blue = gtk_menu_item_new_with_label("Blue");
  gtk_menu_shell_append(GTK_MENU_SHELL(menu_pen), mi_pen_blue);
  g_signal_connect(mi_pen_blue, "activate", G_CALLBACK(set_pen_blue), NULL);
  
  gtk_menu_shell_append(GTK_MENU_SHELL(menubar), mi_file);
  gtk_menu_shell_append(GTK_MENU_SHELL(menubar), mi_brush);
  gtk_menu_shell_append(GTK_MENU_SHELL(menubar), mi_pen);
  gtk_box_pack_start(GTK_BOX(vbox), menubar, FALSE, FALSE, 0);
  gtk_box_pack_start(GTK_BOX(vbox), darea, TRUE, TRUE, 10);

  gtk_window_set_position(GTK_WINDOW(window), GTK_WIN_POS_CENTER);
  gtk_window_set_default_size(GTK_WINDOW(window), 300, 200); 
  gtk_window_set_title(GTK_WINDOW(window), "l6");

  gtk_widget_show_all(window);
  
  gtk_main();

  return 0;
}
